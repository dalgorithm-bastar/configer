// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configCenter.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CfgReq struct {
	UserName             string    `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	EnvNum               string    `protobuf:"bytes,2,opt,name=EnvNum,proto3" json:"EnvNum,omitempty"`
	Target               string    `protobuf:"bytes,3,opt,name=Target,proto3" json:"Target,omitempty"`
	Action               string    `protobuf:"bytes,4,opt,name=Action,proto3" json:"Action,omitempty"`
	File                 *AnyFile  `protobuf:"bytes,5,opt,name=File,proto3" json:"File,omitempty"`
	Version              string    `protobuf:"bytes,6,opt,name=Version,proto3" json:"Version,omitempty"`
	Scheme               string    `protobuf:"bytes,7,opt,name=Scheme,proto3" json:"Scheme,omitempty"`
	Type                 string    `protobuf:"bytes,8,opt,name=Type,proto3" json:"Type,omitempty"`
	Platform             string    `protobuf:"bytes,9,opt,name=Platform,proto3" json:"Platform,omitempty"`
	NodeType             string    `protobuf:"bytes,10,opt,name=NodeType,proto3" json:"NodeType,omitempty"`
	Set                  string    `protobuf:"bytes,11,opt,name=Set,proto3" json:"Set,omitempty"`
	ArgRange             *ArgRange `protobuf:"bytes,12,opt,name=ArgRange,proto3" json:"ArgRange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CfgReq) Reset()         { *m = CfgReq{} }
func (m *CfgReq) String() string { return proto.CompactTextString(m) }
func (*CfgReq) ProtoMessage()    {}
func (*CfgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_configCenter_a0d650b25e84ecb2, []int{0}
}
func (m *CfgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfgReq.Unmarshal(m, b)
}
func (m *CfgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfgReq.Marshal(b, m, deterministic)
}
func (dst *CfgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfgReq.Merge(dst, src)
}
func (m *CfgReq) XXX_Size() int {
	return xxx_messageInfo_CfgReq.Size(m)
}
func (m *CfgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CfgReq.DiscardUnknown(m)
}

var xxx_messageInfo_CfgReq proto.InternalMessageInfo

func (m *CfgReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *CfgReq) GetEnvNum() string {
	if m != nil {
		return m.EnvNum
	}
	return ""
}

func (m *CfgReq) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *CfgReq) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CfgReq) GetFile() *AnyFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *CfgReq) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CfgReq) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *CfgReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CfgReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *CfgReq) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *CfgReq) GetSet() string {
	if m != nil {
		return m.Set
	}
	return ""
}

func (m *CfgReq) GetArgRange() *ArgRange {
	if m != nil {
		return m.ArgRange
	}
	return nil
}

type CfgResp struct {
	Status               string         `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	VersionList          []*VersionInfo `protobuf:"bytes,2,rep,name=VersionList,proto3" json:"VersionList,omitempty"`
	File                 *AnyFile       `protobuf:"bytes,3,opt,name=File,proto3" json:"File,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CfgResp) Reset()         { *m = CfgResp{} }
func (m *CfgResp) String() string { return proto.CompactTextString(m) }
func (*CfgResp) ProtoMessage()    {}
func (*CfgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_configCenter_a0d650b25e84ecb2, []int{1}
}
func (m *CfgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfgResp.Unmarshal(m, b)
}
func (m *CfgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfgResp.Marshal(b, m, deterministic)
}
func (dst *CfgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfgResp.Merge(dst, src)
}
func (m *CfgResp) XXX_Size() int {
	return xxx_messageInfo_CfgResp.Size(m)
}
func (m *CfgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CfgResp.DiscardUnknown(m)
}

var xxx_messageInfo_CfgResp proto.InternalMessageInfo

func (m *CfgResp) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CfgResp) GetVersionList() []*VersionInfo {
	if m != nil {
		return m.VersionList
	}
	return nil
}

func (m *CfgResp) GetFile() *AnyFile {
	if m != nil {
		return m.File
	}
	return nil
}

type AnyFile struct {
	FileName             string   `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileData             []byte   `protobuf:"bytes,2,opt,name=FileData,proto3" json:"FileData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnyFile) Reset()         { *m = AnyFile{} }
func (m *AnyFile) String() string { return proto.CompactTextString(m) }
func (*AnyFile) ProtoMessage()    {}
func (*AnyFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_configCenter_a0d650b25e84ecb2, []int{2}
}
func (m *AnyFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnyFile.Unmarshal(m, b)
}
func (m *AnyFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnyFile.Marshal(b, m, deterministic)
}
func (dst *AnyFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnyFile.Merge(dst, src)
}
func (m *AnyFile) XXX_Size() int {
	return xxx_messageInfo_AnyFile.Size(m)
}
func (m *AnyFile) XXX_DiscardUnknown() {
	xxx_messageInfo_AnyFile.DiscardUnknown(m)
}

var xxx_messageInfo_AnyFile proto.InternalMessageInfo

func (m *AnyFile) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *AnyFile) GetFileData() []byte {
	if m != nil {
		return m.FileData
	}
	return nil
}

type VersionInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`
	Time                 string   `protobuf:"bytes,3,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionInfo) Reset()         { *m = VersionInfo{} }
func (m *VersionInfo) String() string { return proto.CompactTextString(m) }
func (*VersionInfo) ProtoMessage()    {}
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_configCenter_a0d650b25e84ecb2, []int{3}
}
func (m *VersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionInfo.Unmarshal(m, b)
}
func (m *VersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionInfo.Marshal(b, m, deterministic)
}
func (dst *VersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionInfo.Merge(dst, src)
}
func (m *VersionInfo) XXX_Size() int {
	return xxx_messageInfo_VersionInfo.Size(m)
}
func (m *VersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VersionInfo proto.InternalMessageInfo

func (m *VersionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VersionInfo) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *VersionInfo) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type ArgRange struct {
	TopicIp              []string `protobuf:"bytes,1,rep,name=TopicIp,proto3" json:"TopicIp,omitempty"`
	TopicPort            []string `protobuf:"bytes,2,rep,name=TopicPort,proto3" json:"TopicPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArgRange) Reset()         { *m = ArgRange{} }
func (m *ArgRange) String() string { return proto.CompactTextString(m) }
func (*ArgRange) ProtoMessage()    {}
func (*ArgRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_configCenter_a0d650b25e84ecb2, []int{4}
}
func (m *ArgRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArgRange.Unmarshal(m, b)
}
func (m *ArgRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArgRange.Marshal(b, m, deterministic)
}
func (dst *ArgRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArgRange.Merge(dst, src)
}
func (m *ArgRange) XXX_Size() int {
	return xxx_messageInfo_ArgRange.Size(m)
}
func (m *ArgRange) XXX_DiscardUnknown() {
	xxx_messageInfo_ArgRange.DiscardUnknown(m)
}

var xxx_messageInfo_ArgRange proto.InternalMessageInfo

func (m *ArgRange) GetTopicIp() []string {
	if m != nil {
		return m.TopicIp
	}
	return nil
}

func (m *ArgRange) GetTopicPort() []string {
	if m != nil {
		return m.TopicPort
	}
	return nil
}

func init() {
	proto.RegisterType((*CfgReq)(nil), "pb.CfgReq")
	proto.RegisterType((*CfgResp)(nil), "pb.CfgResp")
	proto.RegisterType((*AnyFile)(nil), "pb.AnyFile")
	proto.RegisterType((*VersionInfo)(nil), "pb.VersionInfo")
	proto.RegisterType((*ArgRange)(nil), "pb.ArgRange")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigCenterClient is the client API for ConfigCenter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigCenterClient interface {
	GET(ctx context.Context, in *CfgReq, opts ...grpc.CallOption) (*CfgResp, error)
	COMMIT(ctx context.Context, in *CfgReq, opts ...grpc.CallOption) (*CfgResp, error)
	DELETE(ctx context.Context, in *CfgReq, opts ...grpc.CallOption) (*CfgResp, error)
	PUT(ctx context.Context, in *CfgReq, opts ...grpc.CallOption) (*CfgResp, error)
}

type configCenterClient struct {
	cc *grpc.ClientConn
}

func NewConfigCenterClient(cc *grpc.ClientConn) ConfigCenterClient {
	return &configCenterClient{cc}
}

func (c *configCenterClient) GET(ctx context.Context, in *CfgReq, opts ...grpc.CallOption) (*CfgResp, error) {
	out := new(CfgResp)
	err := c.cc.Invoke(ctx, "/pb.ConfigCenter/GET", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configCenterClient) COMMIT(ctx context.Context, in *CfgReq, opts ...grpc.CallOption) (*CfgResp, error) {
	out := new(CfgResp)
	err := c.cc.Invoke(ctx, "/pb.ConfigCenter/COMMIT", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configCenterClient) DELETE(ctx context.Context, in *CfgReq, opts ...grpc.CallOption) (*CfgResp, error) {
	out := new(CfgResp)
	err := c.cc.Invoke(ctx, "/pb.ConfigCenter/DELETE", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configCenterClient) PUT(ctx context.Context, in *CfgReq, opts ...grpc.CallOption) (*CfgResp, error) {
	out := new(CfgResp)
	err := c.cc.Invoke(ctx, "/pb.ConfigCenter/PUT", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigCenterServer is the server API for ConfigCenter service.
type ConfigCenterServer interface {
	GET(context.Context, *CfgReq) (*CfgResp, error)
	COMMIT(context.Context, *CfgReq) (*CfgResp, error)
	DELETE(context.Context, *CfgReq) (*CfgResp, error)
	PUT(context.Context, *CfgReq) (*CfgResp, error)
}

func RegisterConfigCenterServer(s *grpc.Server, srv ConfigCenterServer) {
	s.RegisterService(&_ConfigCenter_serviceDesc, srv)
}

func _ConfigCenter_GET_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigCenterServer).GET(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ConfigCenter/GET",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigCenterServer).GET(ctx, req.(*CfgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigCenter_COMMIT_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigCenterServer).COMMIT(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ConfigCenter/COMMIT",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigCenterServer).COMMIT(ctx, req.(*CfgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigCenter_DELETE_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigCenterServer).DELETE(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ConfigCenter/DELETE",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigCenterServer).DELETE(ctx, req.(*CfgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigCenter_PUT_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigCenterServer).PUT(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ConfigCenter/PUT",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigCenterServer).PUT(ctx, req.(*CfgReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigCenter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ConfigCenter",
	HandlerType: (*ConfigCenterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GET",
			Handler:    _ConfigCenter_GET_Handler,
		},
		{
			MethodName: "COMMIT",
			Handler:    _ConfigCenter_COMMIT_Handler,
		},
		{
			MethodName: "DELETE",
			Handler:    _ConfigCenter_DELETE_Handler,
		},
		{
			MethodName: "PUT",
			Handler:    _ConfigCenter_PUT_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "configCenter.proto",
}

func init() { proto.RegisterFile("configCenter.proto", fileDescriptor_configCenter_a0d650b25e84ecb2) }

var fileDescriptor_configCenter_a0d650b25e84ecb2 = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x25, 0x4d, 0x49, 0xdb, 0x49, 0x25, 0x90, 0x0f, 0xc8, 0x5a, 0x21, 0x11, 0x85, 0x4b, 0x4f,
	0x95, 0x28, 0x5f, 0x50, 0xba, 0x01, 0x55, 0xda, 0x2d, 0x95, 0x37, 0xcb, 0x3d, 0x2d, 0x4e, 0x88,
	0xb4, 0x89, 0x8d, 0xe3, 0x22, 0xed, 0xbf, 0xf0, 0x3f, 0xfc, 0x16, 0x9a, 0xb1, 0x93, 0xcd, 0x85,
	0xe5, 0xd4, 0xf7, 0xde, 0xd8, 0xd3, 0x99, 0xf7, 0x1c, 0x60, 0x67, 0xd5, 0x96, 0x75, 0xb5, 0x93,
	0xad, 0x95, 0x66, 0xad, 0x8d, 0xb2, 0x8a, 0x4d, 0xf4, 0x29, 0xfd, 0x33, 0x81, 0x68, 0x57, 0x56,
	0x42, 0xfe, 0x64, 0x57, 0x30, 0xbf, 0xef, 0xa4, 0x39, 0x14, 0x8d, 0xe4, 0x41, 0x12, 0xac, 0x16,
	0x62, 0xe0, 0xec, 0x0d, 0x44, 0x59, 0xfb, 0xeb, 0x70, 0x69, 0xf8, 0x84, 0x2a, 0x9e, 0xa1, 0x9e,
	0x17, 0xa6, 0x92, 0x96, 0x87, 0x4e, 0x77, 0x0c, 0xf5, 0xed, 0xd9, 0xd6, 0xaa, 0xe5, 0x53, 0xa7,
	0x3b, 0xc6, 0xde, 0xc1, 0xf4, 0x73, 0xfd, 0x20, 0xf9, 0xcb, 0x24, 0x58, 0xc5, 0x9b, 0x78, 0xad,
	0x4f, 0xeb, 0x6d, 0xfb, 0x88, 0x92, 0xa0, 0x02, 0xe3, 0x30, 0xfb, 0x26, 0x4d, 0x87, 0x37, 0x23,
	0xba, 0xd9, 0x53, 0x6c, 0x79, 0x77, 0xfe, 0x21, 0x1b, 0xc9, 0x67, 0xae, 0xa5, 0x63, 0x8c, 0xc1,
	0x34, 0x7f, 0xd4, 0x92, 0xcf, 0x49, 0x25, 0x8c, 0xab, 0x1c, 0x1f, 0x0a, 0x5b, 0x2a, 0xd3, 0xf0,
	0x85, 0x5b, 0xa5, 0xe7, 0x58, 0x3b, 0xa8, 0xef, 0x92, 0xee, 0x80, 0xab, 0xf5, 0x9c, 0xbd, 0x86,
	0xf0, 0x4e, 0x5a, 0x1e, 0x93, 0x8c, 0x90, 0xad, 0x60, 0xbe, 0x35, 0x95, 0x28, 0xda, 0x4a, 0xf2,
	0x25, 0x0d, 0xbd, 0xa4, 0xa1, 0xbd, 0x26, 0x86, 0x6a, 0x7a, 0x81, 0x19, 0x19, 0xd9, 0x69, 0x1a,
	0xd5, 0x16, 0xf6, 0xd2, 0x79, 0x1f, 0x3d, 0x63, 0x1f, 0x20, 0xf6, 0xdb, 0xdc, 0xd4, 0x9d, 0xe5,
	0x93, 0x24, 0x5c, 0xc5, 0x9b, 0x57, 0xd8, 0xcf, 0xcb, 0xfb, 0xb6, 0x54, 0x62, 0x7c, 0x66, 0x30,
	0x2c, 0xfc, 0x87, 0x61, 0xe9, 0x16, 0x66, 0x5e, 0xc0, 0xcd, 0xf0, 0x77, 0x1c, 0x60, 0xcf, 0xfb,
	0xda, 0x75, 0x61, 0x0b, 0x8a, 0x70, 0x29, 0x06, 0x9e, 0xee, 0x87, 0xb1, 0xf0, 0xff, 0xd1, 0xd0,
	0x51, 0x0b, 0xc2, 0xa8, 0xe1, 0x5b, 0xf0, 0xe9, 0x13, 0x26, 0xe3, 0xeb, 0x46, 0xfa, 0xe4, 0x09,
	0xa7, 0x9f, 0x9e, 0xec, 0xc2, 0x28, 0x73, 0xa5, 0xeb, 0xf3, 0x5e, 0xf3, 0x20, 0x09, 0x31, 0x4a,
	0x4f, 0xd9, 0x5b, 0x58, 0x10, 0x3c, 0x2a, 0xe3, 0x5c, 0x58, 0x88, 0x27, 0x61, 0xf3, 0x3b, 0x80,
	0xe5, 0x6e, 0xf4, 0x5a, 0x59, 0x02, 0xe1, 0x97, 0x2c, 0x67, 0x80, 0xcb, 0xbb, 0xb7, 0x7a, 0x15,
	0x0f, 0xb8, 0xd3, 0xe9, 0x0b, 0xf6, 0x1e, 0xa2, 0xdd, 0xd7, 0xdb, 0xdb, 0xfd, 0xff, 0x0e, 0x5d,
	0x67, 0x37, 0x59, 0x9e, 0x3d, 0x77, 0x28, 0x81, 0xf0, 0x78, 0xff, 0x5c, 0x9b, 0x53, 0x44, 0x1f,
	0xcf, 0xc7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfe, 0x2c, 0xcc, 0x87, 0x52, 0x03, 0x00, 0x00,
}
